// Code generated by protoc-gen-go.
// source: proto/vicus/vicus.proto
// DO NOT EDIT!

/*
Package vicus is a generated protocol buffer package.

It is generated from these files:
	proto/vicus/vicus.proto

It has these top-level messages:
	CreateUserRequest
	UpdateUserRequest
	DeleteUserRequest
	GetUserRequest
	GetUsersRequest
	UserResponse
	UsersResponse
	DeleteUserResponse
	User
*/
package vicus

import proto "github.com/jketcham/vicus/Godeps/_workspace/src/github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "github.com/jketcham/vicus/Godeps/_workspace/src/golang.org/x/net/context"
	grpc "github.com/jketcham/vicus/Godeps/_workspace/src/google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CreateUserRequest struct {
	Email     string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=lastName" json:"lastName,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UpdateUserRequest struct {
	UserId    string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	Password  string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	FirstName string `protobuf:"bytes,4,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,5,opt,name=lastName" json:"lastName,omitempty"`
	Location  string `protobuf:"bytes,6,opt,name=location" json:"location,omitempty"`
	Bio       string `protobuf:"bytes,7,opt,name=bio" json:"bio,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type DeleteUserRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=userId" json:"userId,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetUserRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetUsersRequest struct {
	Id []string `protobuf:"bytes,1,rep,name=id" json:"id,omitempty"`
}

func (m *GetUsersRequest) Reset()                    { *m = GetUsersRequest{} }
func (m *GetUsersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUsersRequest) ProtoMessage()               {}
func (*GetUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UserResponse) Reset()                    { *m = UserResponse{} }
func (m *UserResponse) String() string            { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()               {}
func (*UserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UsersResponse struct {
	User []*User `protobuf:"bytes,1,rep,name=user" json:"user,omitempty"`
}

func (m *UsersResponse) Reset()                    { *m = UsersResponse{} }
func (m *UsersResponse) String() string            { return proto.CompactTextString(m) }
func (*UsersResponse) ProtoMessage()               {}
func (*UsersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UsersResponse) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

type DeleteUserResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *DeleteUserResponse) Reset()                    { *m = DeleteUserResponse{} }
func (m *DeleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserResponse) ProtoMessage()               {}
func (*DeleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type User struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	Location  string `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	Bio       string `protobuf:"bytes,5,opt,name=bio" json:"bio,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*CreateUserRequest)(nil), "vicus.CreateUserRequest")
	proto.RegisterType((*UpdateUserRequest)(nil), "vicus.UpdateUserRequest")
	proto.RegisterType((*DeleteUserRequest)(nil), "vicus.DeleteUserRequest")
	proto.RegisterType((*GetUserRequest)(nil), "vicus.GetUserRequest")
	proto.RegisterType((*GetUsersRequest)(nil), "vicus.GetUsersRequest")
	proto.RegisterType((*UserResponse)(nil), "vicus.UserResponse")
	proto.RegisterType((*UsersResponse)(nil), "vicus.UsersResponse")
	proto.RegisterType((*DeleteUserResponse)(nil), "vicus.DeleteUserResponse")
	proto.RegisterType((*User)(nil), "vicus.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for Vicus service

type VicusClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error)
	GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*UserResponse, error)
	GetUsers(ctx context.Context, in *GetUsersRequest, opts ...grpc.CallOption) (*UsersResponse, error)
}

type vicusClient struct {
	cc *grpc.ClientConn
}

func NewVicusClient(cc *grpc.ClientConn) VicusClient {
	return &vicusClient{cc}
}

func (c *vicusClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/vicus.Vicus/CreateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vicusClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/vicus.Vicus/UpdateUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vicusClient) DeleteUser(ctx context.Context, in *DeleteUserRequest, opts ...grpc.CallOption) (*DeleteUserResponse, error) {
	out := new(DeleteUserResponse)
	err := grpc.Invoke(ctx, "/vicus.Vicus/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vicusClient) GetUser(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := grpc.Invoke(ctx, "/vicus.Vicus/GetUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vicusClient) GetUsers(ctx context.Context, in *GetUsersRequest, opts ...grpc.CallOption) (*UsersResponse, error) {
	out := new(UsersResponse)
	err := grpc.Invoke(ctx, "/vicus.Vicus/GetUsers", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Vicus service

type VicusServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*UserResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UserResponse, error)
	DeleteUser(context.Context, *DeleteUserRequest) (*DeleteUserResponse, error)
	GetUser(context.Context, *GetUserRequest) (*UserResponse, error)
	GetUsers(context.Context, *GetUsersRequest) (*UsersResponse, error)
}

func RegisterVicusServer(s *grpc.Server, srv VicusServer) {
	s.RegisterService(&_Vicus_serviceDesc, srv)
}

func _Vicus_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VicusServer).CreateUser(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Vicus_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VicusServer).UpdateUser(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Vicus_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(DeleteUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VicusServer).DeleteUser(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Vicus_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VicusServer).GetUser(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _Vicus_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(GetUsersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(VicusServer).GetUsers(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _Vicus_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vicus.Vicus",
	HandlerType: (*VicusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _Vicus_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _Vicus_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Vicus_DeleteUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _Vicus_GetUser_Handler,
		},
		{
			MethodName: "GetUsers",
			Handler:    _Vicus_GetUsers_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x53, 0x4b, 0x4b, 0xf3, 0x40,
	0x14, 0xfd, 0x9a, 0x47, 0x1f, 0xa7, 0x5f, 0xab, 0x19, 0x5f, 0x69, 0x51, 0x90, 0xe8, 0x42, 0x5d,
	0x54, 0xa8, 0x0b, 0x41, 0x70, 0x55, 0x41, 0xdc, 0xb8, 0x10, 0x5a, 0x70, 0x39, 0x6d, 0x47, 0x08,
	0xb4, 0x9d, 0x98, 0x99, 0xe8, 0x5f, 0xf0, 0x5f, 0xf9, 0xd7, 0x6c, 0xa6, 0x93, 0x47, 0x3b, 0xd6,
	0x4d, 0x60, 0xee, 0x39, 0xe7, 0xde, 0xc3, 0xb9, 0x37, 0x38, 0x8a, 0x62, 0x2e, 0xf9, 0xf5, 0x47,
	0x38, 0x49, 0xc4, 0xea, 0xdb, 0x53, 0x15, 0xe2, 0xaa, 0x47, 0xf0, 0x0a, 0x6f, 0x10, 0x33, 0x2a,
	0xd9, 0x50, 0xb0, 0xf8, 0x85, 0xbd, 0x27, 0x4c, 0x48, 0xd2, 0x82, 0xcb, 0xe6, 0x34, 0x9c, 0xf9,
	0x95, 0xd3, 0xca, 0x45, 0x83, 0xec, 0xa2, 0x1e, 0x51, 0x21, 0x3e, 0x79, 0x3c, 0xf5, 0x2d, 0x55,
	0xf1, 0xd0, 0x78, 0x0b, 0x63, 0x21, 0x9f, 0xe9, 0x9c, 0xf9, 0x76, 0x46, 0x9a, 0x51, 0x5d, 0x71,
	0xd2, 0x4a, 0xf0, 0x55, 0x81, 0x37, 0x8c, 0xa6, 0x1b, 0xbd, 0xdb, 0xa8, 0x26, 0xcb, 0xe7, 0xd3,
	0x54, 0x37, 0xcf, 0x67, 0x59, 0xc6, 0x2c, 0xdb, 0x9c, 0xe5, 0x18, 0xb3, 0xdc, 0xbc, 0xc2, 0x27,
	0x54, 0x86, 0x7c, 0xe1, 0x57, 0x55, 0xa5, 0x09, 0x7b, 0x1c, 0x72, 0xbf, 0xa6, 0xac, 0x9c, 0xc1,
	0x7b, 0x60, 0x33, 0xf6, 0xa7, 0x93, 0xe0, 0x18, 0xed, 0x47, 0x26, 0xcb, 0x0c, 0xc0, 0x0a, 0x33,
	0xf4, 0x04, 0x3b, 0x1a, 0x15, 0x9b, 0xb0, 0xbd, 0x84, 0x2f, 0xf1, 0x7f, 0xa5, 0x14, 0x11, 0x5f,
	0x08, 0x46, 0x3a, 0x70, 0xd2, 0xe6, 0x4a, 0xdc, 0xec, 0x37, 0x7b, 0xab, 0xe8, 0x53, 0x4a, 0x70,
	0x85, 0x96, 0x6e, 0x63, 0x70, 0xed, 0x4d, 0xee, 0x39, 0x48, 0xd9, 0xb8, 0x16, 0x2c, 0x9d, 0x0b,
	0x49, 0x65, 0x22, 0xb4, 0xb7, 0x11, 0x9c, 0x14, 0x2f, 0xfb, 0x5d, 0x8f, 0xcd, 0x32, 0x62, 0xb3,
	0x8d, 0xd8, 0x9c, 0x72, 0x6c, 0x2a, 0xd5, 0xfe, 0xb7, 0x05, 0x77, 0x94, 0x9a, 0x21, 0xf7, 0x40,
	0x71, 0x26, 0xc4, 0xd7, 0x16, 0x8d, 0xcb, 0xe9, 0xee, 0x95, 0xcc, 0x67, 0x76, 0x83, 0x7f, 0xa9,
	0xbc, 0xb8, 0x84, 0x5c, 0x6e, 0x1c, 0xc7, 0x36, 0xf9, 0x00, 0x28, 0x52, 0xc8, 0xe5, 0xc6, 0x46,
	0xbb, 0x9d, 0x5f, 0x90, 0xbc, 0xc9, 0x2d, 0x6a, 0x7a, 0x81, 0xe4, 0x40, 0xf3, 0xd6, 0xd7, 0xbd,
	0x6d, 0xfa, 0x1d, 0xea, 0xd9, 0xe6, 0xc9, 0xe1, 0xba, 0x32, 0x3b, 0x85, 0xee, 0x7e, 0x49, 0x2a,
	0x0a, 0xed, 0xb8, 0xaa, 0x7e, 0xb6, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x13, 0x58,
	0x08, 0x87, 0x03, 0x00, 0x00,
}
